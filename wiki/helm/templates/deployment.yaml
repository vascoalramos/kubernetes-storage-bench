apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wiki.fullname" . }}
  labels:
    {{- include "wiki.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "wiki.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "wiki.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "wiki.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ default "latest" .Values.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.imagePullPolicy }}
          env:
            - name: DB_TYPE
              value: postgres
            - name: HA_ACTIVE
              value: "true"
            - name: DB_HOST
              value: {{ template "wiki.postgresql.host" . }}
            - name: DB_PORT
              value: "{{ default "5432" .Values.postgresql.postgresqlPort }}"
            - name: DB_NAME
              value: {{ default "wiki" .Values.postgresql.postgresqlDatabase }}
            - name: DB_USER
              value: {{ default "wiki" .Values.postgresql.postgresqlUsername }}
            - name: DB_SSL
              value: "{{ default "false" .Values.postgresql.ssl }}"    
            - name: DB_SSL_CA
              value: "{{ default "" .Values.postgresql.ca }}"   
            - name: DB_PASS
              value: "{{ default "wiki" .Values.postgresql.postgresqlPassword }}"  
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: postgresql-isready
        image: {{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}
        env:
          - name: POSTGRES_USER
            value: "{{ default "wiki" .Values.postgresql.postgresqlUsername }}"  
        command:
          - "sh"
          - "-c"
          - {{ printf "until pg_isready -h %s-postgresql -U ${POSTGRES_USER} ; do sleep 2 ; done" .Release.Name }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
